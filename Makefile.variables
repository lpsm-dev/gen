GOPATH ?= $(shell go env GOPATH)

# Ensure GOPATH is set before running build process.
ifeq "$(GOPATH)" ""
  $(error Please set the environment variable GOPATH before running `make`)
endif

GOOS       := $(shell go env GOOS)
GOARCH     := $(shell go env GOARCH)

# NOTE: '-race' requires cgo; enable cgo by setting CGO_ENABLED=1
BUILD_FLAG := -race
GOBUILD    := CGO_ENABLED=1 GOOS=${GOOS} GOARCH=${GOARCH} go build $(BUILD_FLAG)

BINDIR      := $(CURDIR)/bin
BINNAME     ?= gen

COMMIT   := $(shell git rev-parse --short HEAD)
BUILT_AT := $(shell date +%FT%T%z)
BUILT_ON := $(shell hostname)

LDFLAGS := -w -s
LDFLAGS += -X main.commit=${COMMIT}
LDFLAGS += -X main.builtAt=${BUILT_AT}
LDFLAGS += -X main.builtBy=${USER}
LDFLAGS += -X main.builtOn=${BUILT_ON}
LDFLAGS += -X "github.com/lpmatos/gen/internal/version._UTCBuildTime=$(shell date -u '+%Y-%m-%d %I:%M:%S')"
LDFLAGS += -X "github.com/lpmatos/gen/internal/version._ClientVersion=$(shell cat VERSION)"
LDFLAGS += -X "github.com/lpmatos/gen/internal/version._GoVersion=$(shell go version)"
LDFLAGS += -X "github.com/lpmatos/gen/internal/version._GitBranch=$(shell git rev-parse --abbrev-ref HEAD)"
LDFLAGS += -X "github.com/lpmatos/gen/internal/version._GitHash=$(shell git rev-parse HEAD)"

ifeq ($(OS), Windows_NT)
	DOCKER_CONTAINER_LIST = $(shell docker ps -aq)
else
	DOCKER_CONTAINER_LIST = $(shell docker ps -aq)
endif
